<%- layout('layouts/main')%>

<!DOCTYPE html>
<html>
<head>
    <title>MADPARK-Mapa</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.2/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <style>
        #map { 
            width: 100%;
            height: 480px;
            box-shadow: 5px 5px 5px #888;
            margin-top: 200px; 
        }

        .filtro-container {
            position: absolute;
            top: 120px;
            left: 115px;
            z-index: 1000;
            background-color: #9db9cf;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: max-height 0.3s ease-in-out;
        }

        .filtro-container.open {
            max-height: 600px; /* Ajusta la altura según sea necesario */
        }

        .filtro-container button {
            background-color: #284c61ef;
            color: #fff;
            border: none;
            padding: 15px 15px;
            border-radius: 3px;
            cursor: pointer;
        }

        .filtro-container button:hover {
            background-color: #87CEFA;
        }

        .search-button:hover {
            background-color: #d3a2d8;
        }

        #clearMarkers {
            position: absolute;
            top: 90px;
            right: 20px;
            z-index: 1000;
            background-color: #b4aeb4;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(99, 98, 98, 0.1);
        }

        #clearMarkers:hover {
            background-color: #d3a2d8;
        }
    </style>
</head>
<body>

    <div id="map" class="map"></div>


    <!-- Filtro de búsqueda -->
    <div class="filtro-container" id="filtroContainer">
        <button onclick="toggleSearchBar()">Búsqueda en el mapa</button>
        <div id="searchBar" style="display: none;">
            <label for="direccion">Introduce una dirección:</label>
            <input type="text" id="direccion" name="direccion" placeholder="Escribe aquí...">
            <button onclick="buscarPorDireccion()">Buscar</button>
        </div>
        <button onclick="limpiarFiltros()">Borrar filtros</button>
    </div>

    <!-- Leaflet JS CDN -->
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"></script>
    <!-- Leaflet Routing Machine JS -->
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    <script>
        var map = L.map('map').setView([40.416775, -3.70379], 11); // Centrar en Madrid

        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(map);

        function buscarPorDireccion() {
            var direccion = document.getElementById('direccion').value;

            // Crear instancia del control geocoder
            var controlGeocoder = L.Control.geocoder({
                defaultMarkGeocode: false
            })
            .on('markgeocode', function(e) {
                var latlng = e.geocode.center;
                var marker = L.marker(latlng).addTo(map);
                map.setView(latlng);
            });

            // Agregar el control al mapa y realizar la geocodificación
            controlGeocoder.addTo(map).geocode(direccion);
        }

        function toggleSearchBar() {
            var searchBar = document.getElementById('searchBar');
            if (searchBar.style.display === "none" || searchBar.style.display === "") {
                searchBar.style.display = "block";
            } else {
                searchBar.style.display = "none";
            }
        }

        function limpiarFiltros() {
            // Borrar marcadores y cualquier otro filtro aplicado
            map.eachLayer(function (layer) {
                if (layer instanceof L.Marker) {
                    map.removeLayer(layer);
                }
            });
            // Aquí puedes agregar más lógica para limpiar otros filtros aplicados
        }

        function toggleFiltroContainer() {
            var filtroContainer = document.getElementById('filtroContainer');
            filtroContainer.classList.toggle('open');
        }
    </script>
      <!--Funcion para si esta autenticado obtenga la ubicación del usruario-->
      <% if (isAuthenticated) { %>
          <script>
            navigator.geolocation.getCurrentPosition(function(position) {
              userCoordinates = [position.coords.latitude, position.coords.longitude];
              
              var userIcon = L.icon({
                iconUrl: 'https://raw.githubusercontent.com/ChristiMerce/Madpark_PAGT/main/src/views/layouts/images/pingUsuario.png',
                iconSize: [38, 38],
                iconAnchor: [19, 38],
                popupAnchor: [0, -38]
              });
              
              var userMarker = L.marker(userCoordinates, { icon: userIcon }).addTo(map);
              userMarker.bindPopup("Tu ubicación").openPopup();
            });
          </script>
        <% } else { %>
          <script>
            alert("Para ver su ubicacion debe registrarse o iniciar sesión");
          </script>
        <% } %>
        <!----->


        <script>


     // <---------------------------------------------->
    // Obtener los parkings desde el servidor



    fetch('/parkings')
    .then(response => response.json())
    .then(parkings => {
      // Recorre cada parking
      parkings.forEach(parking => {
        // Crea un marcador personalizado
        const marker = L.marker([parking.LATITUD, parking.LONGITUD]);
  
        // Agrega funcionalidad al hacer clic en el marcador
        marker.on('click', () => {
          // Crea un elemento para mostrar la información (ej: popup)
          const popupContent = `
            <h2>${parking.NOMBRE}</h2>
            <p>Distrito: ${parking.DISTRITO}</p>
            <p>Barrio: ${parking.BARRIO}</p>
            `;
          
          marker.bindPopup(popupContent).openPopup();
        });
  
        // Agrega el marcador al mapa
        marker.addTo(map);
      });
    })
    .catch(error => console.error('Error al obtener los parkings:', error));
  


          const options ={
                  draggable:true
            }       
    </script>
    <script>
         // Función para agregar marcadores de parking
        function addParkingMarker(lat, lng) {
            var parkingMarker = L.marker([lat, lng]).addTo(map);
            parkingMarker.bindPopup("Parking seleccionado").openPopup();

            parkingMarker.on('click', function(e) {
                var userCoordinates = getUserCoordinates(); // Obtener ubicación del usuario
                if (userCoordinates) {
                    calculateRoute(userCoordinates, e.latlng); // Calcular ruta desde ubicación del usuario al parking seleccionado
                } else {
                    alert("Ubicación del usuario no disponible");
                }
            });
        }

    </script>
    
    <script>
        // Función para calcular la ruta desde la ubicación del usuario al parking seleccionado
        function calculateRoute(start, end) {
            L.Routing.control({
                waypoints: [
                    L.latLng(start[0], start[1]), // Ubicación del usuario
                    L.latLng(end.lat, end.lng) // Parking seleccionado
                ]
            }).addTo(map);
        }
    </script>


</body>
</html>
