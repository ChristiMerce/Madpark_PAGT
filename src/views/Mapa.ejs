<%- layout('layouts/main')%>

<!DOCTYPE html>
<html>
<head>
    <title>Routing app</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.2/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <style>
        #map { 
            width: 100%;
            height: 580px;
            box-shadow: 5px 5px 5px #888;
            margin-top: 150px; 
        }

        .filtro-busqueda {
            position: absolute;
            top: 115px;
            right: 115px;
            z-index: 1000;
            background-color: #fff;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            display: none;
        }

        .filtro-busqueda label {
            font-weight: bolder;
            margin-bottom: 5px;
            display: block;
        }

        .filtro-busqueda input[type="text"] {
            width: 200px;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 3px;
            margin-bottom: 10px;
        }

        .filtro-busqueda button {
            background-color: #b4aeb4;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 3px;
            cursor: pointer;
        }

        .filtro-busqueda button:hover {
            background-color: #ce9bd4;
        }

        .search-button {
            position: absolute;
            top: 200px;
            right: 20px;
            z-index: 1000;
            background-color: #b4aeb4;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(99, 98, 98, 0.1);
        }

        .search-button:hover {
            background-color: #d3a2d8;
        }
        #clearMarkersss {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1000;
            background: white;
            padding: 10px;
            border: none;
            cursor: pointer;
            font-size: 16px;
        }
        #clearMarkers {
            position: absolute;
            top: 260px; /* Ajusta este valor para mover el bot√≥n */
            right: 20px; /* Mant√©nlo alineado con el bot√≥n de b√∫squeda */
            z-index: 1000;
            background-color: #b4aeb4;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(99, 98, 98, 0.1);
        }

        #boton-borrar-marcadores:hover {
            background-color: #b498b4;
        }

        
    </style>
</head>
<body>

    <div id="map" class="map"></div>

    <!-- Bot√≥n de b√∫squeda -->
    <button class="search-button" onclick="toggleSearch()">üîç</button>
        <i class="fas fa-search"></i>
    </button>
     <!-- Bot√≥n para borrar marcadores -->
     <button id="clearMarkers" onclick="clearUserMarkers()">üóëÔ∏è</button>

    <!-- Filtro de b√∫squeda por direcci√≥n -->
    <div class="filtro-busqueda" id="filtroBusqueda">
        <label for="direccion">Buscar por direcci√≥n:</label>
        <input type="text" id="direccion" name="direccion" placeholder="Introduzca una direcci√≥n...">
        <button onclick="buscarPorDireccion()">Buscar</button>
    </div>

    <!-- Leaflet JS CDN -->
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"></script>
    <!-- Leaflet Routing Machine JS -->
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    <script>
        var map = L.map('map').setView([40.416775, -3.70379], 11); // Centrar en Madrid

        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery ¬© <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(map);

        function buscarPorDireccion() {
        var direccion = document.getElementById('direccion').value;

        // Crear instancia del control geocoder
        var controlGeocoder = L.Control.geocoder({
            defaultMarkGeocode: false
        })
        .on('markgeocode', function(e) {
            var latlng = e.geocode.center;
            var marker = L.marker(latlng).addTo(map);
            map.setView(latlng);
        });

    // Agregar el control al mapa y realizar la geocodificaci√≥n
    controlGeocoder.addTo(map).geocode(direccion);
}

        // Funci√≥n para mostrar/ocultar el filtro de b√∫squeda
        function toggleSearch() {
            var filtroBusqueda = document.getElementById('filtroBusqueda');
            if (filtroBusqueda.style.display === "none" || filtroBusqueda.style.display === "") {
                filtroBusqueda.style.display = "block";
            } else {
                filtroBusqueda.style.display = "none";
            }
        }


        // Funci√≥n para borrar los marcadores del usuario
        function clearUserMarkers() {
            userMarkers.forEach(function(marker) {
                map.removeLayer(marker);
            });
            userMarkers = [];

            if (routingControl) {
                map.removeControl(routingControl);
                routingControl = null;
            }
        }
    </script>
      <!--Funcion para si esta autenticado obtenga la ubicaci√≥n del usruario-->
      <% if (isAuthenticated) { %>
          <script>
            navigator.geolocation.getCurrentPosition(function(position) {
              userCoordinates = [position.coords.latitude, position.coords.longitude];
              
              var userIcon = L.icon({
                iconUrl: 'https://raw.githubusercontent.com/ChristiMerce/Madpark_PAGT/main/src/views/layouts/images/pingUsuario.png',
                iconSize: [38, 38],
                iconAnchor: [19, 38],
                popupAnchor: [0, -38]
              });
              
              var userMarker = L.marker(userCoordinates, { icon: userIcon }).addTo(map);
              userMarker.bindPopup("Tu ubicaci√≥n").openPopup();
            });
          </script>
        <% } else { %>
          <script>
            alert("Para ver su ubicacion debe registrarse o iniciar sesi√≥n");
          </script>
        <% } %>
        <!----->


        <script>


     // <---------------------------------------------->
    // Obtener los parkings desde el servidor



    fetch('/parkings')
    .then(response => response.json())
    .then(parkings => {
      // Recorre cada parking
      parkings.forEach(parking => {
        // Crea un marcador personalizado
        const marker = L.marker([parking.LATITUD, parking.LONGITUD]);
  
        // Agrega funcionalidad al hacer clic en el marcador
        marker.on('click', () => {
          // Crea un elemento para mostrar la informaci√≥n (ej: popup)
          const popupContent = `
            <h2>${parking.NOMBRE}</h2>
            <p>Distrito: ${parking.DISTRITO}</p>
            <p>Barrio: ${parking.BARRIO}</p>
            `;
          
          marker.bindPopup(popupContent).openPopup();
        });
  
        // Agrega el marcador al mapa
        marker.addTo(map);
      });
    })
    .catch(error => console.error('Error al obtener los parkings:', error));
  


          const options ={
                  draggable:true
            }       
    </script>
    <script>
         // Funci√≥n para agregar marcadores de parking
        function addParkingMarker(lat, lng) {
            var parkingMarker = L.marker([lat, lng]).addTo(map);
            parkingMarker.bindPopup("Parking seleccionado").openPopup();

            parkingMarker.on('click', function(e) {
                var userCoordinates = getUserCoordinates(); // Obtener ubicaci√≥n del usuario
                if (userCoordinates) {
                    calculateRoute(userCoordinates, e.latlng); // Calcular ruta desde ubicaci√≥n del usuario al parking seleccionado
                } else {
                    alert("Ubicaci√≥n del usuario no disponible");
                }
            });
        }

    </script>
    
    <script>
        // Funci√≥n para calcular la ruta desde la ubicaci√≥n del usuario al parking seleccionado
        function calculateRoute(start, end) {
            L.Routing.control({
                waypoints: [
                    L.latLng(start[0], start[1]), // Ubicaci√≥n del usuario
                    L.latLng(end.lat, end.lng) // Parking seleccionado
                ]
            }).addTo(map);
        }
    </script>


</body>
</html>
